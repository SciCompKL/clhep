# ======================================================================
# This is the Evaluator configuration input file
# Process this file with autoconf to produce a configure script.
# ======================================================================


# ----------------------------------------------------------------------
# Identify the package and initialize the autotools:
# ----------------------------------------------------------------------

AC_PREREQ(2.57)
AC_INIT(CLHEP Evaluator, 1.9.0.0, CLHEP@cern.ch, Evaluator)
AC_CONFIG_AUX_DIR(autotools)
AC_CANONICAL_TARGET
AC_CONFIG_SRCDIR([src/Evaluator.cc])
AM_INIT_AUTOMAKE(1.6 foreign)
AC_PROG_LIBTOOL
AC_PROG_INSTALL


# ----------------------------------------------------------------------
# Identify the files that 'configure' is to produce:
# ----------------------------------------------------------------------

# Header containing #defines:
AM_CONFIG_HEADER([Evaluator/defs.h])

# Makefiles:
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([Evaluator/Makefile])
AC_CONFIG_FILES([src/Makefile])
AC_CONFIG_FILES([test/Makefile])

# Test driver program/script:
AC_CONFIG_FILES([test/testEvaluator.sh], [chmod +x test/testEvaluator.sh])

# ----------------------------------------------------------------------
# Capture post-install information:
# ----------------------------------------------------------------------

Evaluator_CPPFLAGS="-I$includedir"
Evaluator_LDFLAGS="-L$libdir"
Evaluator_LIBS="-lCLHEP-$PACKAGE-$VERSION -lm"

AC_SUBST(Evaluator_CPPFLAGS)
AC_SUBST(Evaluator_LIBS)
AC_SUBST(Evaluator_LDFLAGS)


# ----------------------------------------------------------------------
# Supply boilerplate for Evaluator/defs.h source header:
# ----------------------------------------------------------------------

AH_TOP([#ifndef EVALUATOR_DEFS_H
#define EVALUATOR_DEFS_H])

AH_BOTTOM([#endif  // EVALUATOR_DEFS_H])


# ----------------------------------------------------------------------
# Account for any user configuration options:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed programs:
# ----------------------------------------------------------------------

# Locate a C++ compiler:
AC_PROG_CXX(g++ c++ aCC CC cxx cc++ cl FCC KCC RCC xlC_r xlC gpp)

# Use it hereinafter:
AC_LANG(C++)

# Ensure we've found a preprocessor:
AC_REQUIRE_CPP


# worry about compiler flags
case "$target" in
*-*-win32*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -GX -GR -MD";;
  g++) CXXFLAGS="-O";;
  c++) CXXFLAGS="-O";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;;
*-*-cygwin*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -GX -GR -MD";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;;
*-*-solaris*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -mt";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;;
*-*-linux*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;;
alpha*-dec-osf*)
  case "$CXX" in
  cxx) CXXFLAGS="-O -std strict_ansi -timplicit_local";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;;
*-*-hpux*)
  case "$CXX" in
  aCC) CXXFLAGS="-O -Aa +DAportable +Onolimit";;
  CC)  CXXFLAGS="+O3 +DAportable +a1 -z -pta +Onolimit";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;; 
*-*-aix*)
  case "$CXX" in
  xlC) CXXFLAGS="-O3 -qtwolink -+";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;; 
*-*-irix*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -OPT:Olimit=0 -pta";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;; 
powerpc-apple-darwin*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOISE OF C++ COMPILER: $CXX
  esac;; 
esac

# ----------------------------------------------------------------------
# Set system-dependent options:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed libraries:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed header files:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed typedefs, structures, and compiler characteristics:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed library functions:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Finish up:
# ----------------------------------------------------------------------

AC_OUTPUT


# ======================================================================
